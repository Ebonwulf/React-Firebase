{"ast":null,"code":"var _jsxFileName = \"F:\\\\Coding\\\\React Course\\\\React-Firebase\\\\my-first-react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showEvents, setShowEvents] = useState(true);\n  const [events, setEvents] = useState([{\n    title: \"mario's birthday bash\",\n    id: 1\n  }, {\n    title: \"bowser's live stream\",\n    id: 2\n  }, {\n    title: 'race on moo moo farm',\n    id: 3\n  }]); //whenever your state update depends on the previous state, always use a callback function to access the previous state and then base any state update on that previous value.\n\n  const handleClick = id => {\n    setEvents(prevEvents => {\n      return prevEvents.filter(e => {\n        return id !== e.id;\n      });\n    });\n    console.log(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [showEvents && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEvents(false),\n        children: \"Hide events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), !showEvents && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEvents(true),\n        children: \"Show events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), showEvents && events.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [index, \" - \", event.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleClick(event.id);\n        },\n        children: \"Delete event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5LIi9fydcsAQxmDEMG9Js/OY+5g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/Coding/React Course/React-Firebase/my-first-react-app/src/App.js"],"names":["useState","App","showEvents","setShowEvents","events","setEvents","title","id","handleClick","prevEvents","filter","e","console","log","map","event","index"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CACnC;AAAEM,IAAAA,KAAK,EAAE,uBAAT;AAAkCC,IAAAA,EAAE,EAAE;AAAtC,GADmC,EAEnC;AAAED,IAAAA,KAAK,EAAE,sBAAT;AAAiCC,IAAAA,EAAE,EAAE;AAArC,GAFmC,EAGnC;AAAED,IAAAA,KAAK,EAAE,sBAAT;AAAiCC,IAAAA,EAAE,EAAE;AAArC,GAHmC,CAAD,CAApC,CAFa,CAQb;;AACA,QAAMC,WAAW,GAAID,EAAD,IAAQ;AAC1BF,IAAAA,SAAS,CAAEI,UAAD,IAAgB;AACxB,aAAOA,UAAU,CAACC,MAAX,CAAmBC,CAAD,IAAO;AAC9B,eAAOJ,EAAE,KAAKI,CAAC,CAACJ,EAAhB;AACD,OAFM,CAAP;AAGD,KAJQ,CAAT;AAKAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eAEGL,UAAU,iBACT;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOG,CAACD,UAAD,iBACC;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARJ,EAYGD,UAAU,IACTE,MAAM,CAACU,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACT;AAAA,8BACE;AAAA,mBACGA,KADH,SACaD,KAAK,CAACT,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AACE,QAAA,OAAO,EAAE,MAAM;AACbE,UAAAA,WAAW,CAACO,KAAK,CAACR,EAAP,CAAX;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAUQ,KAAK,CAACR,EAAhB;AAAA;AAAA;AAAA;AAAA,YADF,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAjDQN,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [showEvents, setShowEvents] = useState(true);\r\n  const [events, setEvents] = useState([\r\n    { title: \"mario's birthday bash\", id: 1 },\r\n    { title: \"bowser's live stream\", id: 2 },\r\n    { title: 'race on moo moo farm', id: 3 },\r\n  ]);\r\n\r\n  //whenever your state update depends on the previous state, always use a callback function to access the previous state and then base any state update on that previous value.\r\n  const handleClick = (id) => {\r\n    setEvents((prevEvents) => {\r\n      return prevEvents.filter((e) => {\r\n        return id !== e.id;\r\n      });\r\n    });\r\n    console.log(id);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      {/*shows the buttons dependant on if the showEvents state is true or false */}\r\n      {showEvents && (\r\n        <div>\r\n          <button onClick={() => setShowEvents(false)}>Hide events</button>\r\n        </div>\r\n      )}\r\n      {!showEvents && (\r\n        <div>\r\n          <button onClick={() => setShowEvents(true)}>Show events</button>\r\n        </div>\r\n      )}\r\n      {showEvents &&\r\n        events.map((event, index) => (\r\n          <div key={event.id}>\r\n            <h2>\r\n              {index} - {event.title}\r\n            </h2>\r\n            {/* using an annonymous function prevents the event from running as soon as the browser loads, which doesn't wait for the click, now it will only work when the button is clicked */}\r\n            <button\r\n              onClick={() => {\r\n                handleClick(event.id);\r\n              }}\r\n            >\r\n              Delete event\r\n            </button>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}